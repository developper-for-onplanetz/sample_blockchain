{
  "contractName": "ZombieAttack",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_zombieId",
          "type": "uint256"
        }
      ],
      "name": "levelUp",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_zombieId",
          "type": "uint256"
        },
        {
          "name": "_kittyId",
          "type": "uint256"
        }
      ],
      "name": "feedOnKitty",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "zombies",
      "outputs": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "dna",
          "type": "uint256"
        },
        {
          "name": "level",
          "type": "uint32"
        },
        {
          "name": "readyTime",
          "type": "uint32"
        },
        {
          "name": "winCount",
          "type": "uint16"
        },
        {
          "name": "lossCount",
          "type": "uint16"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "getZombiesByOwner",
      "outputs": [
        {
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "zombieToOwner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "setKittyContractAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_zombieId",
          "type": "uint256"
        },
        {
          "name": "_newDna",
          "type": "uint256"
        }
      ],
      "name": "changeDna",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "createRandomZombie",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_zombieId",
          "type": "uint256"
        },
        {
          "name": "_newName",
          "type": "string"
        }
      ],
      "name": "changeName",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_fee",
          "type": "uint256"
        }
      ],
      "name": "setLevelUpFee",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "zombieId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "dna",
          "type": "uint256"
        }
      ],
      "name": "NewZombie",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_zombieId",
          "type": "uint256"
        },
        {
          "name": "_targetId",
          "type": "uint256"
        }
      ],
      "name": "attack",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x60806040526010600155600154600a0a6002556201518060035566038d7ea4c6800060085560006009556046600a55336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061194c8061007d6000396000f3fe6080604052600436106100c5576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630ce90ec2146100ca57806317a7f4cc146100f85780632052465e1461013d5780634412e1041461023c578063528b7b8f146102e25780635f4623f11461035d5780635faf2880146103ae5780637bff0a01146103f35780638da5cb5b146104bb578063c39cbef114610512578063ccf670f8146105a2578063e1fa7638146105dd578063f2fde38b14610622575b600080fd5b6100f6600480360360208110156100e057600080fd5b8101908080359060200190929190505050610673565b005b34801561010457600080fd5b5061013b6004803603604081101561011b57600080fd5b8101908080359060200190929190803590602001909291905050506106df565b005b34801561014957600080fd5b506101766004803603602081101561016057600080fd5b8101908080359060200190929190505050610886565b60405180806020018781526020018663ffffffff1663ffffffff1681526020018563ffffffff1663ffffffff1681526020018461ffff1661ffff1681526020018361ffff1661ffff168152602001828103825288818151815260200191508051906020019080838360005b838110156101fc5780820151818401526020810190506101e1565b50505050905090810190601f1680156102295780820380516001836020036101000a031916815260200191505b5097505050505050505060405180910390f35b34801561024857600080fd5b5061028b6004803603602081101561025f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109a5565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156102ce5780820151818401526020810190506102b3565b505050509050019250505060405180910390f35b3480156102ee57600080fd5b5061031b6004803603602081101561030557600080fd5b8101908080359060200190929190505050610ad6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561036957600080fd5b506103ac6004803603602081101561038057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b09565b005b3480156103ba57600080fd5b506103f1600480360360408110156103d157600080fd5b810190808035906020019092919080359060200190929190505050610ba8565b005b3480156103ff57600080fd5b506104b96004803603602081101561041657600080fd5b810190808035906020019064010000000081111561043357600080fd5b82018360208201111561044557600080fd5b8035906020019184600183028401116401000000008311171561046757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610c8a565b005b3480156104c757600080fd5b506104d0610d04565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561051e57600080fd5b506105a06004803603604081101561053557600080fd5b81019080803590602001909291908035906020019064010000000081111561055c57600080fd5b82018360208201111561056e57600080fd5b8035906020019184600183028401116401000000008311171561059057600080fd5b9091929391929390505050610d29565b005b3480156105ae57600080fd5b506105db600480360360208110156105c557600080fd5b8101908080359060200190929190505050610e17565b005b3480156105e957600080fd5b506106206004803603604081101561060057600080fd5b810190808035906020019092919080359060200190929190505050610e7c565b005b34801561062e57600080fd5b506106716004803603602081101561064557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506110b9565b005b6008543414151561068357600080fd5b60048181548110151561069257fe5b9060005260206000209060030201600201600081819054906101000a900463ffffffff168092919060010191906101000a81548163ffffffff021916908363ffffffff1602179055505050565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e98b7f4d836040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808281526020019150506101406040518083038186803b15801561077157600080fd5b505afa158015610785573d6000803e3d6000fd5b505050506040513d61014081101561079c57600080fd5b81019080805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291905050509091929394959697985090919293949596975090919293949596509091929394955090919293945090919293509091925090915090508091505061088183826040805190810160405280600581526020017f6b6974747900000000000000000000000000000000000000000000000000000081525061120e565b505050565b60048181548110151561089557fe5b9060005260206000209060030201600091509050806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109415780601f1061091657610100808354040283529160200191610941565b820191906000526020600020905b81548152906001019060200180831161092457829003601f168201915b5050505050908060010154908060020160009054906101000a900463ffffffff16908060020160049054906101000a900463ffffffff16908060020160089054906101000a900461ffff169080600201600a9054906101000a900461ffff16905086565b606080600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054604051908082528060200260200182016040528015610a165781602001602082028038833980820191505090505b509050600080905060008090505b600480549050811015610acb578473ffffffffffffffffffffffffffffffffffffffff166005600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610abe57808383815181101515610aa757fe5b906020019060200201818152505081806001019250505b8080600101915050610a24565b508192505050919050565b60056020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610b6457600080fd5b80600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60148281600482815481101515610bbb57fe5b906000526020600020906003020160020160009054906101000a900463ffffffff1663ffffffff1610151515610bf057600080fd5b836005600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610c5e57600080fd5b83600486815481101515610c6e57fe5b9060005260206000209060030201600101819055505050505050565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054141515610cd857600080fd5b6000610ce3826113ed565b9050606481811515610cf157fe5b0681039050610d008282611480565b5050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60028381600482815481101515610d3c57fe5b906000526020600020906003020160020160009054906101000a900463ffffffff1663ffffffff1610151515610d7157600080fd5b846005600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610ddf57600080fd5b8484600488815481101515610df057fe5b90600052602060002090600302016000019190610e0e9291906117fb565b50505050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610e7257600080fd5b8060088190555050565b816005600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610eea57600080fd5b6000600484815481101515610efb57fe5b906000526020600020906003020190506000600484815481101515610f1c57fe5b906000526020600020906003020190506000610f38606461170c565b9050600a54811115156110395782600201600881819054906101000a900461ffff168092919060010191906101000a81548161ffff021916908361ffff1602179055505082600201600081819054906101000a900463ffffffff168092919060010191906101000a81548163ffffffff021916908363ffffffff1602179055505081600201600a81819054906101000a900461ffff168092919060010191906101000a81548161ffff021916908361ffff160217905550506110348683600101546040805190810160405280600681526020017f7a6f6d626965000000000000000000000000000000000000000000000000000081525061120e565b6110b1565b82600201600a81819054906101000a900461ffff168092919060010191906101000a81548161ffff021916908361ffff1602179055505081600201600881819054906101000a900461ffff168092919060010191906101000a81548161ffff021916908361ffff160217905550506110b0836117aa565b5b505050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561111457600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561115057600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b826005600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561127c57600080fd5b600060048581548110151561128d57fe5b906000526020600020906003020190506112a6816117d4565b15156112b157600080fd5b600254848115156112be57fe5b06935060006002858360010154018115156112d557fe5b04905060405180807f6b6974747900000000000000000000000000000000000000000000000000000081525060050190506040518091039020846040516020018082805190602001908083835b6020831015156113475780518252602082019150602081019050602083039250611322565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405160208183030381529060405280519060200120141561139d57606360648281151561139657fe5b0682030190505b6113dc6040805190810160405280600681526020017f4e6f4e616d65000000000000000000000000000000000000000000000000000081525082611480565b6113e5826117aa565b505050505050565b600080826040516020018082805190602001908083835b6020831015156114295780518252602082019150602081019050602083039250611404565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052805190602001206001900490506002548181151561147757fe5b06915050919050565b60006001600460c060405190810160405280868152602001858152602001600163ffffffff168152602001600354420163ffffffff168152602001600061ffff168152602001600061ffff1681525090806001815401808255809150509060018203906000526020600020906003020160009091929091909150600082015181600001908051906020019061151692919061187b565b506020820151816001015560408201518160020160006101000a81548163ffffffff021916908363ffffffff16021790555060608201518160020160046101000a81548163ffffffff021916908363ffffffff16021790555060808201518160020160086101000a81548161ffff021916908361ffff16021790555060a082015181600201600a6101000a81548161ffff021916908361ffff1602179055505050039050336005600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081548092919060010191905055507f88f026aacbbecc90c18411df4b1185fd8d9be2470f1962f192bf84a27d0704b78184846040518084815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b838110156116cb5780820151818401526020810190506116b0565b50505050905090810190601f1680156116f85780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a1505050565b6000600960008154809291906001019190505550814233600954604051602001808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401828152602001935050505060405160208183030381529060405280519060200120600190048115156117a257fe5b069050919050565b60035442018160020160046101000a81548163ffffffff021916908363ffffffff16021790555050565b6000428260020160049054906101000a900463ffffffff1663ffffffff1611159050919050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061183c57803560ff191683800117855561186a565b8280016001018555821561186a579182015b8281111561186957823582559160200191906001019061184e565b5b50905061187791906118fb565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106118bc57805160ff19168380011785556118ea565b828001600101855582156118ea579182015b828111156118e95782518255916020019190600101906118ce565b5b5090506118f791906118fb565b5090565b61191d91905b80821115611919576000816000905550600101611901565b5090565b9056fea165627a7a72305820ab9b293048693d4c37b50404f49c524ddfd656d86327405634bf6191f49f8deb0029",
  "deployedBytecode": "0x6080604052600436106100c5576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630ce90ec2146100ca57806317a7f4cc146100f85780632052465e1461013d5780634412e1041461023c578063528b7b8f146102e25780635f4623f11461035d5780635faf2880146103ae5780637bff0a01146103f35780638da5cb5b146104bb578063c39cbef114610512578063ccf670f8146105a2578063e1fa7638146105dd578063f2fde38b14610622575b600080fd5b6100f6600480360360208110156100e057600080fd5b8101908080359060200190929190505050610673565b005b34801561010457600080fd5b5061013b6004803603604081101561011b57600080fd5b8101908080359060200190929190803590602001909291905050506106df565b005b34801561014957600080fd5b506101766004803603602081101561016057600080fd5b8101908080359060200190929190505050610886565b60405180806020018781526020018663ffffffff1663ffffffff1681526020018563ffffffff1663ffffffff1681526020018461ffff1661ffff1681526020018361ffff1661ffff168152602001828103825288818151815260200191508051906020019080838360005b838110156101fc5780820151818401526020810190506101e1565b50505050905090810190601f1680156102295780820380516001836020036101000a031916815260200191505b5097505050505050505060405180910390f35b34801561024857600080fd5b5061028b6004803603602081101561025f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109a5565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156102ce5780820151818401526020810190506102b3565b505050509050019250505060405180910390f35b3480156102ee57600080fd5b5061031b6004803603602081101561030557600080fd5b8101908080359060200190929190505050610ad6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561036957600080fd5b506103ac6004803603602081101561038057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b09565b005b3480156103ba57600080fd5b506103f1600480360360408110156103d157600080fd5b810190808035906020019092919080359060200190929190505050610ba8565b005b3480156103ff57600080fd5b506104b96004803603602081101561041657600080fd5b810190808035906020019064010000000081111561043357600080fd5b82018360208201111561044557600080fd5b8035906020019184600183028401116401000000008311171561046757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610c8a565b005b3480156104c757600080fd5b506104d0610d04565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561051e57600080fd5b506105a06004803603604081101561053557600080fd5b81019080803590602001909291908035906020019064010000000081111561055c57600080fd5b82018360208201111561056e57600080fd5b8035906020019184600183028401116401000000008311171561059057600080fd5b9091929391929390505050610d29565b005b3480156105ae57600080fd5b506105db600480360360208110156105c557600080fd5b8101908080359060200190929190505050610e17565b005b3480156105e957600080fd5b506106206004803603604081101561060057600080fd5b810190808035906020019092919080359060200190929190505050610e7c565b005b34801561062e57600080fd5b506106716004803603602081101561064557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506110b9565b005b6008543414151561068357600080fd5b60048181548110151561069257fe5b9060005260206000209060030201600201600081819054906101000a900463ffffffff168092919060010191906101000a81548163ffffffff021916908363ffffffff1602179055505050565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e98b7f4d836040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808281526020019150506101406040518083038186803b15801561077157600080fd5b505afa158015610785573d6000803e3d6000fd5b505050506040513d61014081101561079c57600080fd5b81019080805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291905050509091929394959697985090919293949596975090919293949596509091929394955090919293945090919293509091925090915090508091505061088183826040805190810160405280600581526020017f6b6974747900000000000000000000000000000000000000000000000000000081525061120e565b505050565b60048181548110151561089557fe5b9060005260206000209060030201600091509050806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109415780601f1061091657610100808354040283529160200191610941565b820191906000526020600020905b81548152906001019060200180831161092457829003601f168201915b5050505050908060010154908060020160009054906101000a900463ffffffff16908060020160049054906101000a900463ffffffff16908060020160089054906101000a900461ffff169080600201600a9054906101000a900461ffff16905086565b606080600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054604051908082528060200260200182016040528015610a165781602001602082028038833980820191505090505b509050600080905060008090505b600480549050811015610acb578473ffffffffffffffffffffffffffffffffffffffff166005600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610abe57808383815181101515610aa757fe5b906020019060200201818152505081806001019250505b8080600101915050610a24565b508192505050919050565b60056020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610b6457600080fd5b80600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60148281600482815481101515610bbb57fe5b906000526020600020906003020160020160009054906101000a900463ffffffff1663ffffffff1610151515610bf057600080fd5b836005600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610c5e57600080fd5b83600486815481101515610c6e57fe5b9060005260206000209060030201600101819055505050505050565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054141515610cd857600080fd5b6000610ce3826113ed565b9050606481811515610cf157fe5b0681039050610d008282611480565b5050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60028381600482815481101515610d3c57fe5b906000526020600020906003020160020160009054906101000a900463ffffffff1663ffffffff1610151515610d7157600080fd5b846005600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610ddf57600080fd5b8484600488815481101515610df057fe5b90600052602060002090600302016000019190610e0e9291906117fb565b50505050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610e7257600080fd5b8060088190555050565b816005600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610eea57600080fd5b6000600484815481101515610efb57fe5b906000526020600020906003020190506000600484815481101515610f1c57fe5b906000526020600020906003020190506000610f38606461170c565b9050600a54811115156110395782600201600881819054906101000a900461ffff168092919060010191906101000a81548161ffff021916908361ffff1602179055505082600201600081819054906101000a900463ffffffff168092919060010191906101000a81548163ffffffff021916908363ffffffff1602179055505081600201600a81819054906101000a900461ffff168092919060010191906101000a81548161ffff021916908361ffff160217905550506110348683600101546040805190810160405280600681526020017f7a6f6d626965000000000000000000000000000000000000000000000000000081525061120e565b6110b1565b82600201600a81819054906101000a900461ffff168092919060010191906101000a81548161ffff021916908361ffff1602179055505081600201600881819054906101000a900461ffff168092919060010191906101000a81548161ffff021916908361ffff160217905550506110b0836117aa565b5b505050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561111457600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561115057600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b826005600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561127c57600080fd5b600060048581548110151561128d57fe5b906000526020600020906003020190506112a6816117d4565b15156112b157600080fd5b600254848115156112be57fe5b06935060006002858360010154018115156112d557fe5b04905060405180807f6b6974747900000000000000000000000000000000000000000000000000000081525060050190506040518091039020846040516020018082805190602001908083835b6020831015156113475780518252602082019150602081019050602083039250611322565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405160208183030381529060405280519060200120141561139d57606360648281151561139657fe5b0682030190505b6113dc6040805190810160405280600681526020017f4e6f4e616d65000000000000000000000000000000000000000000000000000081525082611480565b6113e5826117aa565b505050505050565b600080826040516020018082805190602001908083835b6020831015156114295780518252602082019150602081019050602083039250611404565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052805190602001206001900490506002548181151561147757fe5b06915050919050565b60006001600460c060405190810160405280868152602001858152602001600163ffffffff168152602001600354420163ffffffff168152602001600061ffff168152602001600061ffff1681525090806001815401808255809150509060018203906000526020600020906003020160009091929091909150600082015181600001908051906020019061151692919061187b565b506020820151816001015560408201518160020160006101000a81548163ffffffff021916908363ffffffff16021790555060608201518160020160046101000a81548163ffffffff021916908363ffffffff16021790555060808201518160020160086101000a81548161ffff021916908361ffff16021790555060a082015181600201600a6101000a81548161ffff021916908361ffff1602179055505050039050336005600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081548092919060010191905055507f88f026aacbbecc90c18411df4b1185fd8d9be2470f1962f192bf84a27d0704b78184846040518084815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b838110156116cb5780820151818401526020810190506116b0565b50505050905090810190601f1680156116f85780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a1505050565b6000600960008154809291906001019190505550814233600954604051602001808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401828152602001935050505060405160208183030381529060405280519060200120600190048115156117a257fe5b069050919050565b60035442018160020160046101000a81548163ffffffff021916908363ffffffff16021790555050565b6000428260020160049054906101000a900463ffffffff1663ffffffff1611159050919050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061183c57803560ff191683800117855561186a565b8280016001018555821561186a579182015b8281111561186957823582559160200191906001019061184e565b5b50905061187791906118fb565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106118bc57805160ff19168380011785556118ea565b828001600101855582156118ea579182015b828111156118e95782518255916020019190600101906118ce565b5b5090506118f791906118fb565b5090565b61191d91905b80821115611919576000816000905550600101611901565b5090565b9056fea165627a7a72305820ab9b293048693d4c37b50404f49c524ddfd656d86327405634bf6191f49f8deb0029",
  "sourceMap": "64:787:4:-;;;229:2:5;212:19;;259:9;;253:2;:15;235:33;;292:6;272:26;;127:11:7;109:29;;123:1:4;106:18;;160:2;128:34;;351:10:2;343:5;;:18;;;;;;;;;;;;;;;;;;64:787:4;;;;;;",
  "deployedSourceMap": "64:787:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;448:125:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;448:125:7;;;;;;;;;;;;;;;;;;;;1420:194:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1420:194:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1420:194:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;440:23:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;440:23:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;440:23:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;440:23:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;899:342:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;899:342:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;899:342:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;899:342:7;;;;;;;;;;;;;;;;;468:46:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;468:46:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;468:46:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;566:121:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;566:121:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;566:121:6;;;;;;;;;;;;;;;;;;;;;;745:150:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;745:150:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;745:150:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1009:229:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1009:229:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1009:229:5;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1009:229:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1009:229:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1009:229:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1009:229:5;;;;;;;;;;;;;;;;;;56:20:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;56:20:2;;;;;;;;;;;;;;;;;;;;;;;;;;;577:164:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;577:164:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;577:164:7;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;577:164:7;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;577:164:7;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;577:164:7;;;;;;;;;;;;;;;363:81;;8:9:-1;5:2;;;30:1;27;20:12;5:2;363:81:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;363:81:7;;;;;;;;;;;;;;;;;;;;333:516:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;333:516:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;333:516:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;675:174:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;675:174:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;675:174:2;;;;;;;;;;;;;;;;;;;;;;448:125:7;525:10;;512:9;:23;504:32;;;;;;;;542:7;550:9;542:18;;;;;;;;;;;;;;;;;;;;:24;;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;448:125;:::o;1420:194:6:-;1485:13;1526;;;;;;;;;;;:22;;;1549:8;1526:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1526:32:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1526:32:6;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;1526:32:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1504:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1564:45;1580:9;1591:8;1564:45;;;;;;;;;;;;;;;;;;:15;:45::i;:::-;1420:194;;;:::o;440:23:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;899:342:7:-;965:13;986:20;1020:16;:24;1037:6;1020:24;;;;;;;;;;;;;;;;1009:36;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;1009:36:7;;;;986:59;;1051:12;1066:1;1051:16;;1078:6;1087:1;1078:10;;1073:145;1094:7;:14;;;;1090:1;:18;1073:145;;;1147:6;1127:26;;:13;:16;1141:1;1127:16;;;;;;;;;;;;;;;;;;;;;:26;;;1123:89;;;1183:1;1165:6;1172:7;1165:15;;;;;;;;;;;;;;;;;:19;;;;;1194:9;;;;;;;1123:89;1110:3;;;;;;;1073:145;;;;1230:6;1223:13;;;;899:342;;;:::o;468:46:5:-;;;;;;;;;;;;;;;;;;;;;;:::o;566:121:6:-;495:5:2;;;;;;;;;;;481:19;;:10;:19;;;473:28;;;;;;;;673:8:6;642:13;;:40;;;;;;;;;;;;;;;;;;566:121;:::o;745:150:7:-;814:2;818:9;234:6;206:7;214:9;206:18;;;;;;;;;;;;;;;;;;;;:24;;;;;;;;;;;;:34;;;;198:43;;;;;;;;841:9;525:13:6;:24;539:9;525:24;;;;;;;;;;;;;;;;;;;;;511:38;;:10;:38;;;503:47;;;;;;;;883:7:7;858;866:9;858:18;;;;;;;;;;;;;;;;;;;;:22;;:32;;;;247:1;745:150;;;;:::o;1009:229:5:-;1111:1;1079:16;:28;1096:10;1079:28;;;;;;;;;;;;;;;;:33;1071:42;;;;;;;;1119:12;1134:25;1153:5;1134:18;:25::i;:::-;1119:40;;1195:3;1185:7;:13;;;;;;;;1175:7;:23;1165:33;;1204:29;1218:5;1225:7;1204:13;:29::i;:::-;1009:229;;:::o;56:20:2:-;;;;;;;;;;;;;:::o;577:164:7:-;659:1;662:9;234:6;206:7;214:9;206:18;;;;;;;;;;;;;;;;;;;;:24;;;;;;;;;;;;:34;;;;198:43;;;;;;;;685:9;525:13:6;:24;539:9;525:24;;;;;;;;;;;;;;;;;;;;;511:38;;:10;:38;;;503:47;;;;;;;;728:8:7;;702:7;710:9;702:18;;;;;;;;;;;;;;;;;;;;:23;;:34;;;;;;;:::i;:::-;;247:1;577:164;;;;;:::o;363:81::-;495:5:2;;;;;;;;;;;481:19;;:10;:19;;;473:28;;;;;;;;435:4:7;422:10;:17;;;;363:81;:::o;333:516:4:-;402:9;525:13:6;:24;539:9;525:24;;;;;;;;;;;;;;;;;;;;;511:38;;:10;:38;;;503:47;;;;;;;;419:23:4;445:7;453:9;445:18;;;;;;;;;;;;;;;;;;;;419:44;;469:26;498:7;506:9;498:18;;;;;;;;;;;;;;;;;;;;469:47;;522:9;534:12;542:3;534:7;:12::i;:::-;522:24;;564;;556:4;:32;;552:293;;;598:8;:17;;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;625:8;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;649:11;:21;;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;680:53;696:9;707:11;:15;;;680:53;;;;;;;;;;;;;;;;;;:15;:53::i;:::-;552:293;;;754:8;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;782:11;:20;;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;812:26;829:8;812:16;:26::i;:::-;552:293;556:1:6;;;333:516:4;;;:::o;675:174:2:-;495:5;;;;;;;;;;;481:19;;:10;:19;;;473:28;;;;;;;;771:1;751:22;;:8;:22;;;;743:31;;;;;;;;813:8;785:37;;806:5;;;;;;;;;;;785:37;;;;;;;;;;;;836:8;828:5;;:16;;;;;;;;;;;;;;;;;;675:174;:::o;932:484:6:-;1035:9;525:13;:24;539:9;525:24;;;;;;;;;;;;;;;;;;;;;511:38;;:10;:38;;;503:47;;;;;;;;1052:23;1078:7;1086:9;1078:18;;;;;;;;;;;;;;;;;;;;1052:44;;1110:18;1119:8;1110;:18::i;:::-;1102:27;;;;;;;;1161:10;;1148;:23;;;;;;;;1135:36;;1177:11;1221:1;1207:10;1192:8;:12;;;:25;1191:31;;;;;;;;1177:45;;1273:18;;;;;;;;;;;;;;;;;;;1259:8;1242:26;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1242:26:6;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1242:26:6;;;1232:37;;;;;;:59;1228:115;;;1334:2;1328:3;1319:6;:12;;;;;;;;1310:6;:21;:26;1301:35;;1228:115;1348:31;;;;;;;;;;;;;;;;;;;1372:6;1348:13;:31::i;:::-;1385:26;1402:8;1385:16;:26::i;:::-;556:1;;932:484;;;;:::o;837:168:5:-;907:4;919:9;963:4;946:22;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;946:22:5;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;946:22:5;;;936:33;;;;;;931:39;;;919:51;;990:10;;983:4;:17;;;;;;;;976:24;;;837:168;;;:::o;565:268::-;635:7;718:1;645:7;658:56;;;;;;;;;665:5;658:56;;;;672:4;658:56;;;;678:1;658:56;;;;;;694:12;;688:3;:18;658:56;;;;;;709:1;658:56;;;;;;712:1;658:56;;;;;645:70;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;645:70:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:74;635:84;;745:10;725:13;:17;739:2;725:17;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;761:16;:28;778:10;761:28;;;;;;;;;;;;;;;;:30;;;;;;;;;;;;;802:26;812:2;816:5;823:4;802:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;802:26:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;565:268;;;:::o;167:162:4:-;216:4;228:9;;:11;;;;;;;;;;;;;316:8;284:3;289:10;301:9;;267:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;267:44:4;;;257:55;;;;;;252:61;;;:72;;;;;;;;245:79;;167:162;;;:::o;691:116:6:-;789:12;;783:3;:18;756:7;:17;;;:46;;;;;;;;;;;;;;;;;;691:116;:::o;811:117::-;876:4;919:3;898:7;:17;;;;;;;;;;;;:24;;;;890:33;;811:117;;;:::o;64:787:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity >=0.4.21 <0.6.0;\n\nimport \"./zombiehelper.sol\";\n\ncontract ZombieAttack is ZombieHelper {\n  uint randNonce = 0;\n  uint attackVictoryProbability = 70;\n\n  function randMod(uint _modulus) internal returns(uint) {\n    randNonce++;\n    return uint(keccak256(abi.encodePacked(now, msg.sender, randNonce))) % _modulus;\n  }\n\n  function attack(uint _zombieId, uint _targetId) external onlyOwnerOf(_zombieId) {\n    Zombie storage myZombie = zombies[_zombieId];\n    Zombie storage enemyZombie = zombies[_targetId];\n    uint rand = randMod(100);\n    if (rand <= attackVictoryProbability) {\n      myZombie.winCount++;\n      myZombie.level++;\n      enemyZombie.lossCount++;\n      feedAndMultiply(_zombieId, enemyZombie.dna, \"zombie\");\n    } else {\n      myZombie.lossCount++;\n      enemyZombie.winCount++;\n      _triggerCooldown(myZombie);\n    }\n  }\n}\n",
  "sourcePath": "/Users/matsumototakuya/Documents/sample_blockchain/cryptozombie/contracts/zombieattack.sol",
  "ast": {
    "absolutePath": "/Users/matsumototakuya/Documents/sample_blockchain/cryptozombie/contracts/zombieattack.sol",
    "exportedSymbols": {
      "ZombieAttack": [
        370
      ]
    },
    "id": 371,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 264,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:4"
      },
      {
        "absolutePath": "/Users/matsumototakuya/Documents/sample_blockchain/cryptozombie/contracts/zombiehelper.sol",
        "file": "./zombiehelper.sol",
        "id": 265,
        "nodeType": "ImportDirective",
        "scope": 371,
        "sourceUnit": 875,
        "src": "34:28:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 266,
              "name": "ZombieHelper",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 874,
              "src": "89:12:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ZombieHelper_$874",
                "typeString": "contract ZombieHelper"
              }
            },
            "id": 267,
            "nodeType": "InheritanceSpecifier",
            "src": "89:12:4"
          }
        ],
        "contractDependencies": [
          164,
          527,
          717,
          874
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 370,
        "linearizedBaseContracts": [
          370,
          874,
          717,
          527,
          164
        ],
        "name": "ZombieAttack",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 270,
            "name": "randNonce",
            "nodeType": "VariableDeclaration",
            "scope": 370,
            "src": "106:18:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 268,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "106:4:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 269,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "123:1:4",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 273,
            "name": "attackVictoryProbability",
            "nodeType": "VariableDeclaration",
            "scope": 370,
            "src": "128:34:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 271,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "128:4:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3730",
              "id": 272,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "160:2:4",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_70_by_1",
                "typeString": "int_const 70"
              },
              "value": "70"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 297,
              "nodeType": "Block",
              "src": "222:107:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "228:11:4",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 280,
                      "name": "randNonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 270,
                      "src": "228:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 282,
                  "nodeType": "ExpressionStatement",
                  "src": "228:11:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 287,
                                  "name": "now",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1048,
                                  "src": "284:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 288,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1046,
                                    "src": "289:3:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 289,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "289:10:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 290,
                                  "name": "randNonce",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 270,
                                  "src": "301:9:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 285,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1033,
                                  "src": "267:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 286,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "267:16:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 291,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "267:44:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 284,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1040,
                            "src": "257:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 292,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "257:55:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 283,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "252:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint"
                      },
                      "id": 293,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "252:61:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 294,
                      "name": "_modulus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 275,
                      "src": "316:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "252:72:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 279,
                  "id": 296,
                  "nodeType": "Return",
                  "src": "245:79:4"
                }
              ]
            },
            "documentation": null,
            "id": 298,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "randMod",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 276,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 275,
                  "name": "_modulus",
                  "nodeType": "VariableDeclaration",
                  "scope": 298,
                  "src": "184:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 274,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "184:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "183:15:4"
            },
            "returnParameters": {
              "id": 279,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 278,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 298,
                  "src": "216:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 277,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "216:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "215:6:4"
            },
            "scope": 370,
            "src": "167:162:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 368,
              "nodeType": "Block",
              "src": "413:436:4",
              "statements": [
                {
                  "assignments": [
                    309
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 309,
                      "name": "myZombie",
                      "nodeType": "VariableDeclaration",
                      "scope": 368,
                      "src": "419:23:4",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Zombie_$411_storage_ptr",
                        "typeString": "struct ZombieFactory.Zombie"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 308,
                        "name": "Zombie",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 411,
                        "src": "419:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Zombie_$411_storage_ptr",
                          "typeString": "struct ZombieFactory.Zombie"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 313,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 310,
                      "name": "zombies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 414,
                      "src": "445:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Zombie_$411_storage_$dyn_storage",
                        "typeString": "struct ZombieFactory.Zombie storage ref[] storage ref"
                      }
                    },
                    "id": 312,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 311,
                      "name": "_zombieId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 300,
                      "src": "453:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "445:18:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Zombie_$411_storage",
                      "typeString": "struct ZombieFactory.Zombie storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "419:44:4"
                },
                {
                  "assignments": [
                    315
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 315,
                      "name": "enemyZombie",
                      "nodeType": "VariableDeclaration",
                      "scope": 368,
                      "src": "469:26:4",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Zombie_$411_storage_ptr",
                        "typeString": "struct ZombieFactory.Zombie"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 314,
                        "name": "Zombie",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 411,
                        "src": "469:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Zombie_$411_storage_ptr",
                          "typeString": "struct ZombieFactory.Zombie"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 319,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 316,
                      "name": "zombies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 414,
                      "src": "498:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Zombie_$411_storage_$dyn_storage",
                        "typeString": "struct ZombieFactory.Zombie storage ref[] storage ref"
                      }
                    },
                    "id": 318,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 317,
                      "name": "_targetId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 302,
                      "src": "506:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "498:18:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Zombie_$411_storage",
                      "typeString": "struct ZombieFactory.Zombie storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "469:47:4"
                },
                {
                  "assignments": [
                    321
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 321,
                      "name": "rand",
                      "nodeType": "VariableDeclaration",
                      "scope": 368,
                      "src": "522:9:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 320,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "522:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 325,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "313030",
                        "id": 323,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "542:3:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "id": 322,
                      "name": "randMod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 298,
                      "src": "534:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "534:12:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "522:24:4"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 326,
                      "name": "rand",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 321,
                      "src": "556:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 327,
                      "name": "attackVictoryProbability",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 273,
                      "src": "564:24:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "556:32:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 366,
                    "nodeType": "Block",
                    "src": "746:99:4",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 355,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "754:20:4",
                          "subExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 352,
                              "name": "myZombie",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 309,
                              "src": "754:8:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Zombie_$411_storage_ptr",
                                "typeString": "struct ZombieFactory.Zombie storage pointer"
                              }
                            },
                            "id": 354,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "lossCount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 410,
                            "src": "754:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 356,
                        "nodeType": "ExpressionStatement",
                        "src": "754:20:4"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "782:22:4",
                          "subExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 357,
                              "name": "enemyZombie",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 315,
                              "src": "782:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Zombie_$411_storage_ptr",
                                "typeString": "struct ZombieFactory.Zombie storage pointer"
                              }
                            },
                            "id": 359,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "winCount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 408,
                            "src": "782:20:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 361,
                        "nodeType": "ExpressionStatement",
                        "src": "782:22:4"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 363,
                              "name": "myZombie",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 309,
                              "src": "829:8:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Zombie_$411_storage_ptr",
                                "typeString": "struct ZombieFactory.Zombie storage pointer"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Zombie_$411_storage_ptr",
                                "typeString": "struct ZombieFactory.Zombie storage pointer"
                              }
                            ],
                            "id": 362,
                            "name": "_triggerCooldown",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 605,
                            "src": "812:16:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Zombie_$411_storage_ptr_$returns$__$",
                              "typeString": "function (struct ZombieFactory.Zombie storage pointer)"
                            }
                          },
                          "id": 364,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "812:26:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 365,
                        "nodeType": "ExpressionStatement",
                        "src": "812:26:4"
                      }
                    ]
                  },
                  "id": 367,
                  "nodeType": "IfStatement",
                  "src": "552:293:4",
                  "trueBody": {
                    "id": 351,
                    "nodeType": "Block",
                    "src": "590:150:4",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "598:19:4",
                          "subExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 329,
                              "name": "myZombie",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 309,
                              "src": "598:8:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Zombie_$411_storage_ptr",
                                "typeString": "struct ZombieFactory.Zombie storage pointer"
                              }
                            },
                            "id": 331,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "winCount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 408,
                            "src": "598:17:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 333,
                        "nodeType": "ExpressionStatement",
                        "src": "598:19:4"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 337,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "625:16:4",
                          "subExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 334,
                              "name": "myZombie",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 309,
                              "src": "625:8:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Zombie_$411_storage_ptr",
                                "typeString": "struct ZombieFactory.Zombie storage pointer"
                              }
                            },
                            "id": 336,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "level",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 404,
                            "src": "625:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 338,
                        "nodeType": "ExpressionStatement",
                        "src": "625:16:4"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 342,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "649:23:4",
                          "subExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 339,
                              "name": "enemyZombie",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 315,
                              "src": "649:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Zombie_$411_storage_ptr",
                                "typeString": "struct ZombieFactory.Zombie storage pointer"
                              }
                            },
                            "id": 341,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "lossCount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 410,
                            "src": "649:21:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 343,
                        "nodeType": "ExpressionStatement",
                        "src": "649:23:4"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 345,
                              "name": "_zombieId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 300,
                              "src": "696:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 346,
                                "name": "enemyZombie",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 315,
                                "src": "707:11:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Zombie_$411_storage_ptr",
                                  "typeString": "struct ZombieFactory.Zombie storage pointer"
                                }
                              },
                              "id": 347,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "dna",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 402,
                              "src": "707:15:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "7a6f6d626965",
                              "id": 348,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "724:8:4",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4f2d78170249c02248453a34f03adc0d8b9b269bf65531ea8b62c0e665cbc1fe",
                                "typeString": "literal_string \"zombie\""
                              },
                              "value": "zombie"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4f2d78170249c02248453a34f03adc0d8b9b269bf65531ea8b62c0e665cbc1fe",
                                "typeString": "literal_string \"zombie\""
                              }
                            ],
                            "id": 344,
                            "name": "feedAndMultiply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 691,
                            "src": "680:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,uint256,string memory)"
                            }
                          },
                          "id": 349,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "680:53:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 350,
                        "nodeType": "ExpressionStatement",
                        "src": "680:53:4"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 369,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 305,
                    "name": "_zombieId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 300,
                    "src": "402:9:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 306,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 304,
                  "name": "onlyOwnerOf",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 575,
                  "src": "390:11:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "390:22:4"
              }
            ],
            "name": "attack",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 303,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 300,
                  "name": "_zombieId",
                  "nodeType": "VariableDeclaration",
                  "scope": 369,
                  "src": "349:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 299,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "349:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 302,
                  "name": "_targetId",
                  "nodeType": "VariableDeclaration",
                  "scope": 369,
                  "src": "365:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 301,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "365:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "348:32:4"
            },
            "returnParameters": {
              "id": 307,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "413:0:4"
            },
            "scope": 370,
            "src": "333:516:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 371,
        "src": "64:787:4"
      }
    ],
    "src": "0:852:4"
  },
  "legacyAST": {
    "absolutePath": "/Users/matsumototakuya/Documents/sample_blockchain/cryptozombie/contracts/zombieattack.sol",
    "exportedSymbols": {
      "ZombieAttack": [
        370
      ]
    },
    "id": 371,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 264,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:4"
      },
      {
        "absolutePath": "/Users/matsumototakuya/Documents/sample_blockchain/cryptozombie/contracts/zombiehelper.sol",
        "file": "./zombiehelper.sol",
        "id": 265,
        "nodeType": "ImportDirective",
        "scope": 371,
        "sourceUnit": 875,
        "src": "34:28:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 266,
              "name": "ZombieHelper",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 874,
              "src": "89:12:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ZombieHelper_$874",
                "typeString": "contract ZombieHelper"
              }
            },
            "id": 267,
            "nodeType": "InheritanceSpecifier",
            "src": "89:12:4"
          }
        ],
        "contractDependencies": [
          164,
          527,
          717,
          874
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 370,
        "linearizedBaseContracts": [
          370,
          874,
          717,
          527,
          164
        ],
        "name": "ZombieAttack",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 270,
            "name": "randNonce",
            "nodeType": "VariableDeclaration",
            "scope": 370,
            "src": "106:18:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 268,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "106:4:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 269,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "123:1:4",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 273,
            "name": "attackVictoryProbability",
            "nodeType": "VariableDeclaration",
            "scope": 370,
            "src": "128:34:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 271,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "128:4:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3730",
              "id": 272,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "160:2:4",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_70_by_1",
                "typeString": "int_const 70"
              },
              "value": "70"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 297,
              "nodeType": "Block",
              "src": "222:107:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "228:11:4",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 280,
                      "name": "randNonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 270,
                      "src": "228:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 282,
                  "nodeType": "ExpressionStatement",
                  "src": "228:11:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 287,
                                  "name": "now",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1048,
                                  "src": "284:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 288,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1046,
                                    "src": "289:3:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 289,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "289:10:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 290,
                                  "name": "randNonce",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 270,
                                  "src": "301:9:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 285,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1033,
                                  "src": "267:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 286,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "267:16:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 291,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "267:44:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 284,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1040,
                            "src": "257:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 292,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "257:55:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 283,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "252:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint"
                      },
                      "id": 293,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "252:61:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 294,
                      "name": "_modulus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 275,
                      "src": "316:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "252:72:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 279,
                  "id": 296,
                  "nodeType": "Return",
                  "src": "245:79:4"
                }
              ]
            },
            "documentation": null,
            "id": 298,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "randMod",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 276,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 275,
                  "name": "_modulus",
                  "nodeType": "VariableDeclaration",
                  "scope": 298,
                  "src": "184:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 274,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "184:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "183:15:4"
            },
            "returnParameters": {
              "id": 279,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 278,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 298,
                  "src": "216:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 277,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "216:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "215:6:4"
            },
            "scope": 370,
            "src": "167:162:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 368,
              "nodeType": "Block",
              "src": "413:436:4",
              "statements": [
                {
                  "assignments": [
                    309
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 309,
                      "name": "myZombie",
                      "nodeType": "VariableDeclaration",
                      "scope": 368,
                      "src": "419:23:4",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Zombie_$411_storage_ptr",
                        "typeString": "struct ZombieFactory.Zombie"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 308,
                        "name": "Zombie",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 411,
                        "src": "419:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Zombie_$411_storage_ptr",
                          "typeString": "struct ZombieFactory.Zombie"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 313,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 310,
                      "name": "zombies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 414,
                      "src": "445:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Zombie_$411_storage_$dyn_storage",
                        "typeString": "struct ZombieFactory.Zombie storage ref[] storage ref"
                      }
                    },
                    "id": 312,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 311,
                      "name": "_zombieId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 300,
                      "src": "453:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "445:18:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Zombie_$411_storage",
                      "typeString": "struct ZombieFactory.Zombie storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "419:44:4"
                },
                {
                  "assignments": [
                    315
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 315,
                      "name": "enemyZombie",
                      "nodeType": "VariableDeclaration",
                      "scope": 368,
                      "src": "469:26:4",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Zombie_$411_storage_ptr",
                        "typeString": "struct ZombieFactory.Zombie"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 314,
                        "name": "Zombie",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 411,
                        "src": "469:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Zombie_$411_storage_ptr",
                          "typeString": "struct ZombieFactory.Zombie"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 319,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 316,
                      "name": "zombies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 414,
                      "src": "498:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Zombie_$411_storage_$dyn_storage",
                        "typeString": "struct ZombieFactory.Zombie storage ref[] storage ref"
                      }
                    },
                    "id": 318,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 317,
                      "name": "_targetId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 302,
                      "src": "506:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "498:18:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Zombie_$411_storage",
                      "typeString": "struct ZombieFactory.Zombie storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "469:47:4"
                },
                {
                  "assignments": [
                    321
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 321,
                      "name": "rand",
                      "nodeType": "VariableDeclaration",
                      "scope": 368,
                      "src": "522:9:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 320,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "522:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 325,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "313030",
                        "id": 323,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "542:3:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "id": 322,
                      "name": "randMod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 298,
                      "src": "534:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "534:12:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "522:24:4"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 326,
                      "name": "rand",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 321,
                      "src": "556:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 327,
                      "name": "attackVictoryProbability",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 273,
                      "src": "564:24:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "556:32:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 366,
                    "nodeType": "Block",
                    "src": "746:99:4",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 355,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "754:20:4",
                          "subExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 352,
                              "name": "myZombie",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 309,
                              "src": "754:8:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Zombie_$411_storage_ptr",
                                "typeString": "struct ZombieFactory.Zombie storage pointer"
                              }
                            },
                            "id": 354,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "lossCount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 410,
                            "src": "754:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 356,
                        "nodeType": "ExpressionStatement",
                        "src": "754:20:4"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "782:22:4",
                          "subExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 357,
                              "name": "enemyZombie",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 315,
                              "src": "782:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Zombie_$411_storage_ptr",
                                "typeString": "struct ZombieFactory.Zombie storage pointer"
                              }
                            },
                            "id": 359,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "winCount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 408,
                            "src": "782:20:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 361,
                        "nodeType": "ExpressionStatement",
                        "src": "782:22:4"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 363,
                              "name": "myZombie",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 309,
                              "src": "829:8:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Zombie_$411_storage_ptr",
                                "typeString": "struct ZombieFactory.Zombie storage pointer"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Zombie_$411_storage_ptr",
                                "typeString": "struct ZombieFactory.Zombie storage pointer"
                              }
                            ],
                            "id": 362,
                            "name": "_triggerCooldown",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 605,
                            "src": "812:16:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Zombie_$411_storage_ptr_$returns$__$",
                              "typeString": "function (struct ZombieFactory.Zombie storage pointer)"
                            }
                          },
                          "id": 364,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "812:26:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 365,
                        "nodeType": "ExpressionStatement",
                        "src": "812:26:4"
                      }
                    ]
                  },
                  "id": 367,
                  "nodeType": "IfStatement",
                  "src": "552:293:4",
                  "trueBody": {
                    "id": 351,
                    "nodeType": "Block",
                    "src": "590:150:4",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "598:19:4",
                          "subExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 329,
                              "name": "myZombie",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 309,
                              "src": "598:8:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Zombie_$411_storage_ptr",
                                "typeString": "struct ZombieFactory.Zombie storage pointer"
                              }
                            },
                            "id": 331,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "winCount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 408,
                            "src": "598:17:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 333,
                        "nodeType": "ExpressionStatement",
                        "src": "598:19:4"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 337,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "625:16:4",
                          "subExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 334,
                              "name": "myZombie",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 309,
                              "src": "625:8:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Zombie_$411_storage_ptr",
                                "typeString": "struct ZombieFactory.Zombie storage pointer"
                              }
                            },
                            "id": 336,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "level",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 404,
                            "src": "625:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 338,
                        "nodeType": "ExpressionStatement",
                        "src": "625:16:4"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 342,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "649:23:4",
                          "subExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 339,
                              "name": "enemyZombie",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 315,
                              "src": "649:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Zombie_$411_storage_ptr",
                                "typeString": "struct ZombieFactory.Zombie storage pointer"
                              }
                            },
                            "id": 341,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "lossCount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 410,
                            "src": "649:21:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 343,
                        "nodeType": "ExpressionStatement",
                        "src": "649:23:4"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 345,
                              "name": "_zombieId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 300,
                              "src": "696:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 346,
                                "name": "enemyZombie",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 315,
                                "src": "707:11:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Zombie_$411_storage_ptr",
                                  "typeString": "struct ZombieFactory.Zombie storage pointer"
                                }
                              },
                              "id": 347,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "dna",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 402,
                              "src": "707:15:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "7a6f6d626965",
                              "id": 348,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "724:8:4",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4f2d78170249c02248453a34f03adc0d8b9b269bf65531ea8b62c0e665cbc1fe",
                                "typeString": "literal_string \"zombie\""
                              },
                              "value": "zombie"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4f2d78170249c02248453a34f03adc0d8b9b269bf65531ea8b62c0e665cbc1fe",
                                "typeString": "literal_string \"zombie\""
                              }
                            ],
                            "id": 344,
                            "name": "feedAndMultiply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 691,
                            "src": "680:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,uint256,string memory)"
                            }
                          },
                          "id": 349,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "680:53:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 350,
                        "nodeType": "ExpressionStatement",
                        "src": "680:53:4"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 369,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 305,
                    "name": "_zombieId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 300,
                    "src": "402:9:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 306,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 304,
                  "name": "onlyOwnerOf",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 575,
                  "src": "390:11:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "390:22:4"
              }
            ],
            "name": "attack",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 303,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 300,
                  "name": "_zombieId",
                  "nodeType": "VariableDeclaration",
                  "scope": 369,
                  "src": "349:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 299,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "349:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 302,
                  "name": "_targetId",
                  "nodeType": "VariableDeclaration",
                  "scope": 369,
                  "src": "365:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 301,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "365:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "348:32:4"
            },
            "returnParameters": {
              "id": 307,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "413:0:4"
            },
            "scope": 370,
            "src": "333:516:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 371,
        "src": "64:787:4"
      }
    ],
    "src": "0:852:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.0",
  "updatedAt": "2018-12-27T07:37:12.434Z",
  "devdoc": {
    "methods": {
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "setLevelUpFee(uint256)": {
        "notice": "function withdraw() external onlyOwner { owner.transfer(address(this).balance); }"
      }
    }
  }
}